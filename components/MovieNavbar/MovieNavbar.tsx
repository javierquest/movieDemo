/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { Avatar } from '@mui/material';
import { styled } from '@mui/material/styles';
import { MovieNavbarProps } from 'types';

 
const ScreenDesktop: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  backgroundColor: `rgba(0, 0, 0, 1)`,  
  boxShadow: `0px 3px 4px rgba(0, 0, 0, 0.25)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  width: props.size === "mobile" ? `375px` : "100%",  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: props.size === "mobile" ? `6px 14px` : `6px 80px`,  
  boxSizing: `border-box`,  
}));
  
const Row: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const NuVueLogo: any = styled("img")({  
  height: `15px`,  
  width: `67.19px`,  
});
  
const MenuStructure: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-end`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `36px`,  
});
  
const Items: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-end`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Movies: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `center`,  
  whiteSpace: `pre-wrap`,  
  color: props.size === "mobile" ? theme.palette["Background"]["Paper"] : `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: props.size === "mobile" ? `400` : `700`,  
  fontSize: `14px`,  
  letterSpacing: props.size === "mobile" ? `0px` : `0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const OurTheatres: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: props.size === "mobile" ? theme.palette["Background"]["Paper"] : `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: props.size === "mobile" ? `400` : `700`,  
  fontSize: `14px`,  
  letterSpacing: props.size === "mobile" ? `0px` : `0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  opacity: `0.6000000238418579`,  
  margin: `0px 0px 0px 40px`,  
}));
  
const FoodDrink: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: props.size === "mobile" ? theme.palette["Background"]["Paper"] : `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: props.size === "mobile" ? `400` : `700`,  
  fontSize: `14px`,  
  letterSpacing: props.size === "mobile" ? `0px` : `0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  opacity: `0.6000000238418579`,  
  margin: `0px 0px 0px 40px`,  
}));
  
const GiftCards: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: props.size === "mobile" ? theme.palette["Background"]["Paper"] : `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: props.size === "mobile" ? `400` : `700`,  
  fontSize: `14px`,  
  letterSpacing: props.size === "mobile" ? `0px` : `0.14px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  opacity: `0.6000000238418579`,  
  margin: `0px 0px 0px 40px`,  
}));
  
const Hamburger: any = styled("img")({  
  height: `15px`,  
  width: `21px`,  
  margin: `0px 0px 0px 40px`,  
});
  
const RightSide: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const Search: any = styled("img")({  
  height: `17px`,  
  width: `18px`,  
  margin: `0px`,  
});
  
const Profile: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px 0px 0px 12px`,  
});
  
const Avatar1: any = styled(Avatar)({  
  width: `30px`,  
  height: `30px`,  
  margin: `0px`,  
});
  
const Drop: any = styled("img")({  
  height: `5px`,  
  width: `10px`,  
  margin: `0px 0px 0px 5px`,  
});
 
function MovieNavbar(props: MovieNavbarProps): JSX.Element {
  return (
    <ScreenDesktop  className={props.className}   props={props} >
      <Row >
        <NuVueLogo  src={`assets/images/movienavbar_NuVue_Logo.png`} alt={"NuVue Logo"}/>
        {(!(props.size === "mobile")) &&
          <MenuStructure >
            <Items >
              <Movies props={props} >
                {`Movies`}
                  </Movies>
              <OurTheatres props={props} >
                {`Our Theatres`}
                  </OurTheatres>
              <FoodDrink props={props} >
                {`Food & Drink`}
                  </FoodDrink>
              <GiftCards props={props} >
                {`Gift Cards`}
                  </GiftCards>
            </Items>
            {false &&
              <Hamburger  src={`assets/images/movienavbar_Hamburger.png`} alt={"Hamburger"}/>
            }
          </MenuStructure>
        }
        <RightSide >
          <Search  src={`assets/images/movienavbar_search.png`} alt={"search"}/>
          <Profile >
            <Avatar1 variant="rounded" src={`assets/images/movienavbar_Avatar.png`} alt={"Avatar"}   />
            <Drop  src={`assets/images/movienavbar_drop.png`} alt={"drop"}/>
          </Profile>
        </RightSide>
      </Row>
    </ScreenDesktop>
  );
}

export default MovieNavbar;
