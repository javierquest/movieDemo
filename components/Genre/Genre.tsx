/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { GenreProps } from 'types';

 
const GenreBiography: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ theme, props }: any) =>({  
  backgroundColor: theme.palette["Primary"]["Contrast"],  
  border: `1px solid theme.customShadows["Light"]["Text"]["Disabled"].color`,  
  boxSizing: `border-box`,  
  borderRadius: `50px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `6px 16px`,  
  width: props.genre === 'drama' ? "unset" : props.genre === 'action' ? "unset" : props.genre === 'horror' ? "unset" : props.genre === 'comedy' ? "unset" : props.genre === 'fantasy' ? "unset" : props.genre === 'adventure' ? "unset" : props.genre === 'crime' ? "unset" : props.genre === 'romance' ? "unset" : props.genre === 'mystery' ? "unset" : props.genre === 'thriller' ? "unset" : props.genre === 'western' ? "unset" : props.genre === 'history' ? "unset" : props.genre === 'animation' ? "unset" : props.genre === 'music' ? "unset" : props.genre === 'sports' ? "unset" : props.genre === 'science fiction' ? "unset" : props.genre === 'kids' ? "unset" : "100%",  
}));
  
const Genre1: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: theme.palette["Text"]["Primary"],  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `600`,  
  fontSize: `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
 
function Genre(props: GenreProps): JSX.Element {
  return (
    (props.genre) &&
      <GenreBiography  className={props.className}   props={props} >
        <Genre1 >
          {props.genre === 'drama' ? `Drama` : props.genre === 'action' ? `Action` : props.genre === 'horror' ? `Horror` : props.genre === 'comedy' ? `Comedy` : props.genre === 'fantasy' ? `Fantasy` : props.genre === 'adventure' ? `Adventure` : props.genre === 'crime' ? `Crime` : props.genre === 'romance' ? `Romance` : props.genre === 'mystery' ? `Mystery` : props.genre === 'thriller' ? `Thriller` : props.genre === 'western' ? `Western` : props.genre === 'history' ? `History` : props.genre === 'animation' ? `Animation` : props.genre === 'music' ? `Music` : props.genre === 'sports' ? `Sports` : props.genre === 'science fiction' ? `Sci-fi` : props.genre === 'kids' ? `Kids` :  `Biography`}
            </Genre1>
      </GenreBiography>
  );
}

export default Genre;
