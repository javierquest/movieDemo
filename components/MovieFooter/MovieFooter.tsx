/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import { MovieFooterProps } from 'types';

 
const Property1Desktop: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  backgroundColor: `rgba(23, 23, 23, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: props.size === "tablet" ? `768px` : props.size === "mobile" ? `375px` : "100%",  
  justifyContent: `flex-start`,  
  alignItems: props.size === "tablet" ? `flex-start` : props.size === "mobile" ? `flex-start` : `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
}));
  
const FooterContent: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: props.size === "tablet" ? `0px 0px 50px 0px` : props.size === "mobile" ? `40px 0px` : `50px 180px 30px 180px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const FooterCentered: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: props.size === "mobile" ? `column` : `row`,  
  justifyContent: props.size === "mobile" ? `flex-start` : `space-between`,  
  alignItems: `flex-start`,  
  padding: props.size === "tablet" ? `50px 50px 0px 50px` : props.size === "mobile" ? `0px 44px` : `0px 50px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
}));
  
const Social: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: props.size === "mobile" ? `0px` : "unset",  
}));
  
const NuVueLogo: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  height: `15px`,  
  width: `67.19px`,  
  margin: `0px`,  
});
  
const Vector: any = styled("img")({  
  height: `15px`,  
  width: `67.19px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
});
  
const SocialLinks: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: props.size === "tablet" ? `39px 0px 0px 0px` : props.size === "mobile" ? `40px 0px 0px 0px` : `43px 0px 0px 0px`,  
  overflow: `hidden`,  
}));
  
const Social1: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `16px`,  
  letterSpacing: `0.1599999964237213px`,  
  textDecoration: `none`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Facebook: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Twitter: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const LinkedIn: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Instagram: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Column1: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: props.size === "tablet" ? `54px 0px 0px 0px` : props.size === "mobile" ? `0px` : `58px 0px 0px 0px`,  
  boxSizing: `border-box`,  
  margin: props.size === "mobile" ? `38px 0px 0px 0px` : "unset",  
}));
  
const Links1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
});
  
const Movies: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `16px`,  
  letterSpacing: `0.1599999964237213px`,  
  textDecoration: `none`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const Movies1: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Theatres: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Rating: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Imax: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const RealD3D: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Dolby: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Column2: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: props.size === "mobile" ? `row` : `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: props.size === "tablet" ? `54px 0px 0px 0px` : props.size === "mobile" ? `0px` : `58px 0px 0px 0px`,  
  boxSizing: `border-box`,  
  margin: props.size === "mobile" ? `38px 0px 0px 0px` : "unset",  
}));
  
const Link2: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const OurCompany: any = styled("div")({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `16px`,  
  letterSpacing: `0.1599999964237213px`,  
  textDecoration: `none`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `0px`,  
});
  
const OurBrands: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const ContactUs: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const CorporateInfo: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const FilmFestivals: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const GroupsEvents: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const Column3: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: props.size === "mobile" ? `row` : `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: props.size === "tablet" ? `54px 0px 0px 0px` : props.size === "mobile" ? `0px` : `58px 0px 0px 0px`,  
  boxSizing: `border-box`,  
  margin: props.size === "mobile" ? `38px 0px 0px 0px` : "unset",  
}));
  
const Link4: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  margin: `0px`,  
  width: props.size === "mobile" ? `110px` : "unset",  
}));
  
const More: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `900`,  
  fontSize: `16px`,  
  letterSpacing: `0.1599999964237213px`,  
  textDecoration: `none`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  width: props.size === "tablet" ? "unset" : props.size === "mobile" ? "unset" : `119px`,  
  margin: `0px`,  
}));
  
const Jobs: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const OffersPromos: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const MovieMerch: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const MobileApp: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const GiftCards: any = styled(Link)({  
  color: `rgba(151, 151, 151, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: `16px`,  
  letterSpacing: `0px`,  
  lineHeight: `24px`,  
  textTransform: `none`,  
  margin: `8px 0px 0px 0px`,  
});
  
const MadeWith: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  height: `54px`,  
  margin: `0px`,  
  overflow: `hidden`,  
});
  
const Line: any = styled("div")({  
  backgroundColor: `rgba(112, 112, 112, 1)`,  
  border: `1px solid rgba(80, 80, 80, 1)`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  height: `1px`,  
  margin: `0px`,  
});
  
const Btm: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `center`,  
  padding: props.size === "tablet" ? `0px 50px` : props.size === "mobile" ? `0px 44px` : `0px 230px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `15px 0px 0px 0px`,  
  overflow: `hidden`,  
}));
  
const Left: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
});
  
const ThisSiteWasProudl: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: props.size === "mobile" ? `10px` : `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `21px`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const Right: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
});
  
const Pp: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: props.size === "mobile" ? `10px` : `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `21px`,  
  textTransform: `none`,  
  margin: `0px`,  
}));
  
const Terms: any = styled("div", {
    shouldForwardProp: prop => !["props"].includes(prop.toString())
  })(({ props }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(255, 255, 255, 1)`,  
  fontStyle: `normal`,  
  fontFamily: `Roboto`,  
  fontWeight: `700`,  
  fontSize: props.size === "mobile" ? `10px` : `14px`,  
  letterSpacing: `0px`,  
  textDecoration: `none`,  
  lineHeight: `21px`,  
  textTransform: `none`,  
  margin: props.size === "mobile" ? `0px 0px 0px 10px` : `0px 0px 0px 34px`,  
}));
 
function MovieFooter(props: MovieFooterProps): JSX.Element {
  return (
    <Property1Desktop  className={props.className}   props={props} >
      <FooterContent props={props} >
        <FooterCentered props={props} >
          <Social props={props} >
            <NuVueLogo >
              <Vector  src={`assets/images/moviefooter_Vector.png`} alt={"Vector"}/>
            </NuVueLogo>
            <SocialLinks props={props} >
              <Social1 >
                {`Social`}
                  </Social1>
              <Facebook href="#" underline="hover"  >Facebook</Facebook>
              <Twitter href="#" underline="hover"  >Twitter</Twitter>
              <LinkedIn href="#" underline="hover"  >LinkedIn</LinkedIn>
              <Instagram href="#" underline="hover"  >Instagram</Instagram>
            </SocialLinks>
          </Social>
          <Column1 props={props} >
            <Links1 >
              <Movies >
                {`Movies`}
                  </Movies>
              <Movies1 href="#" underline="hover"  >Movies</Movies1>
              <Theatres href="#" underline="hover"  >Theatres</Theatres>
              <Rating href="#" underline="hover"  >Rating Information</Rating>
              <Imax href="#" underline="hover"  >IMAX</Imax>
              <RealD3D href="#" underline="hover"  >ReadlD 3D</RealD3D>
              <Dolby href="#" underline="hover"  >Dolby Cinema</Dolby>
            </Links1>
          </Column1>
          <Column2 props={props} >
            <Link2 >
              <OurCompany >
                {`Our Company`}
                  </OurCompany>
              <OurBrands href="#" underline="hover"  >Our Brands</OurBrands>
              <ContactUs href="#" underline="hover"  >Contact Us</ContactUs>
              <CorporateInfo href="#" underline="hover"  >Corporate Info</CorporateInfo>
              <FilmFestivals href="#" underline="hover"  >Film Festivals</FilmFestivals>
              <GroupsEvents href="#" underline="hover"  >Groups & Events</GroupsEvents>
            </Link2>
          </Column2>
          <Column3 props={props} >
            <Link4 props={props} >
              <More props={props} >
                {`More`}
                  </More>
              <Jobs href="#" underline="hover"  >Jobs</Jobs>
              <OffersPromos href="#" underline="hover"  >Offers & Promos</OffersPromos>
              <MovieMerch href="#" underline="hover"  >Movie Merch</MovieMerch>
              <MobileApp href="#" underline="hover"  >Mobile App</MobileApp>
              <GiftCards href="#" underline="hover"  >Gift Cards</GiftCards>
            </Link4>
          </Column3>
        </FooterCentered>
      </FooterContent>
      <MadeWith >
        <Line >
        </Line>
        <Btm props={props} >
          <Left >
            <ThisSiteWasProudl props={props} >
              {`© Copyright 2022`}
                </ThisSiteWasProudl>
          </Left>
          <Right >
            <Pp props={props} >
              {`Privacy Policy`}
                </Pp>
            <Terms props={props} >
              {`Terms of Service`}
                </Terms>
          </Right>
        </Btm>
      </MadeWith>
    </Property1Desktop>
  );
}

export default MovieFooter;
